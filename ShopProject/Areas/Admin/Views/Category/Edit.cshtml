@model CategoryViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit Category</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="SaveEdit" asp-controller="Category" method="post" asp-route-id="@Model.NewCategory.Id">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="@Model.NewCategory.Id" class="form-control" hidden />
            </div>
            <div class="form-group">
                <label asp-for="@Model.NewCategory.Name" class="control-label"></label>
                <input asp-for="@Model.NewCategory.Name" class="form-control" />
                <span asp-validation-for="@Model.NewCategory.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.NewCategory.Description" class="control-label"></label>
                <input asp-for="@Model.NewCategory.Description" class="form-control" />
                <span asp-validation-for="@Model.NewCategory.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Category" asp-action="Categories" class="btn btn-danger">Back to List</a>
</div>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
